user www-data;

worker_processes auto;

events {
    use epoll;
    worker_connections 1024;
    multi_accept on;
}

http {

    # MIME types
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format  main  '[$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    error_log /var/log/nginx/error.log;

    # Charset
    charset utf-8;

    # Pass files directly instead of copying into buffer
    sendfile on;

    # Max body size
    client_max_body_size 256M;

    # Emit nginx version on error pages and in the “Server” response header field.
    server_tokens off;

    # Directory listing output
    autoindex off;

    # Socket options
    tcp_nopush on;
    tcp_nodelay on;

    # Connection keepalive
    keepalive_timeout 30;

    # Force browser XSS protection
    add_header X-XSS-Protection "1; mode=block";

    # gzip
    gzip  on;
    gzip_static on;
    gzip_comp_level 1;
    gzip_http_version 1.1;
    gzip_min_length    1100;
    gzip_buffers 16 8k;
    gzip_disable "MSIE [1-6]\.";
    gzip_vary on;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
      text/css
      text/javascript
      text/xml
      text/plain
      text/x-component
      application/javascript
      application/json
      application/xml
      application/rss+xml
      font/truetype
      font/opentype
      application/vnd.ms-fontobject
      image/svg+xml
      svg
      svgz;

    # Use the client IP that is passed by the reverse proxy to the Docker container
    set_real_ip_from 172.16.0.0/12;  # Covers all Docker default bridge networks
    set_real_ip_from fd00::/8;       # Covers IPv6 ULA (commonly used in Docker)
    real_ip_header X-Forwarded-For;

    # App server
    server {

        # Listen
        listen 80;
        server_name localhost;

        # Project root
        root   /var/www/public;
        index  index.php;

        # Cache assets
        location ~ ^/(img|js|css|font|screenshots)/ {
            access_log off;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }

        # Cache favicon
        location /favicon.ico {
            access_log off;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }

        # Workshop images
        location ~ ^/workshop/image/([0-9]+)/(.+)$ {
            access_log off;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
            alias /var/storage/workshop/$1/images/$2;
        }

        # Avatars
        location ~ ^/avatar/(.+)$ {
            access_log off;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
            alias /var/storage/avatar/$1;
        }

        # News images
        location ~ ^/news/image/(.+)$ {
            access_log off;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
            alias /var/storage/news-img/$1;
        }

        # Crash report savefiles
        location ~ ^/dev/crash-report/download/(.+)$ {
            add_header Content-disposition "attachment; filename=$1";
            alias /var/storage/crash-report/savefiles/$1;
        }

        # Alpha patches
        location ~ ^/download/alpha/(.+)$ {
            add_header Content-disposition "attachment; filename=$1";
            alias /var/storage/alpha-patch/$1;
        }

        # Prototypes
        location ~ ^/download/prototype/(.+)$ {
            add_header Content-disposition "attachment; filename=$1";
            alias /var/storage/prototype/$1;
        }

        # Web Uploads
        location ~ ^/uploads/(.+)$ {
            add_header Content-disposition "attachment; filename=$1";
            alias /var/storage/upload/$1;
        }

        # Check if file path is directly accessible
        # Route the rest trough the PHP router
        location / {
            try_files $uri /var/www/public/index.php$is_args$args;
        }

        # PHP scripts
        location ~ \.php$ {

            # Pass to PHP container
            fastcgi_pass kfx-php:9000;
            fastcgi_index index.php;

            # Tell PHP what file to process
            fastcgi_param SCRIPT_FILENAME /var/www/public/index.php;

            # Include standard FastCGI parameters
            include fastcgi_params;

            # Some extra settings for better performance
            fastcgi_buffer_size 128k;
            fastcgi_buffers 4 256k;
            fastcgi_busy_buffers_size 256k;
        }
    }
}
